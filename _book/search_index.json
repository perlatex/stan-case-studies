[["cancer.html", "第 3 章 吸烟导致癌症？ 3.1 二项模型 3.2 二项Logit模型 3.3 参考", " 第 3 章 吸烟导致癌症？ library(tidyverse) ## Warning: package &#39;ggplot2&#39; was built under R version 4.0.3 ## Warning: package &#39;forcats&#39; was built under R version 4.0.3 library(rstan) ## Warning: package &#39;rstan&#39; was built under R version 4.0.3 ## Warning: package &#39;StanHeaders&#39; was built under R version 4.0.3 从肺癌患者和无癌个体中随机抽取两组样本1，目的是考察两组人吸烟习惯的差异。 数据如下 cancer &lt;- tribble( ~group, ~n, ~smokers, &quot;Cancer patients&quot;, 86, 82, &quot;Control group&quot;, 86, 72 ) cancer 3.1 二项模型 为完成这个二项抽样模型，将每组数据里吸烟人数的比例\\(\\pi_i\\)作为参数，并使用uniform先验概率分布 \\[ \\begin{aligned}[t] r_i &amp;\\sim \\mathsf{Binomial}(n_i, \\pi_i) \\end{aligned} \\] 吸烟比例的差值为 \\[ \\delta = \\pi_1 - \\pi_2 , \\] 并让\\(\\pi\\)使用uniform先验概率分布 \\[ \\begin{aligned} \\pi_i &amp;\\sim \\mathsf{Beta}(1, 1) \\end{aligned} \\] 在generated quantities block中计算了比例log-odds ratio之差 \\[ \\lambda = \\log\\left(\\frac{\\pi_1}{1 - \\pi_1}\\right) - \\log \\left( \\frac{\\pi_2}{1 - \\pi_2} \\right) , \\] 具体 Stan 模型如下 cancer_mod1 &lt;- &quot; data { int&lt;lower = 0&gt; r[2]; int&lt;lower = 1&gt; n[2]; } parameters { vector&lt;lower = 0, upper = 1&gt;[2] p; } model { p ~ beta(1, 1); r ~ binomial(n, p); } generated quantities { real delta; int delta_up; real lambda; int lambda_up; delta = p[1] - p[2]; delta_up = delta &gt; 0; lambda = logit(p[1]) - logit(p[2]); lambda_up = lambda &gt; 0; } &quot; cancer_data &lt;- list( r = cancer$smokers, n = cancer$n ) cancer_fit1 &lt;- stan(model_code = cancer_mod1, data = cancer_data) ## ## SAMPLING FOR MODEL &#39;2354fbe97c4a0c24d3a232b7e511ee01&#39; NOW (CHAIN 1). ## Chain 1: ## Chain 1: Gradient evaluation took 0 seconds ## Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 1: Adjust your expectations accordingly! ## Chain 1: ## Chain 1: ## Chain 1: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 1: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 1: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 1: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 1: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 1: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 1: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 1: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 1: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 1: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 1: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 1: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 1: ## Chain 1: Elapsed Time: 0.02 seconds (Warm-up) ## Chain 1: 0.022 seconds (Sampling) ## Chain 1: 0.042 seconds (Total) ## Chain 1: ## ## SAMPLING FOR MODEL &#39;2354fbe97c4a0c24d3a232b7e511ee01&#39; NOW (CHAIN 2). ## Chain 2: ## Chain 2: Gradient evaluation took 0 seconds ## Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 2: Adjust your expectations accordingly! ## Chain 2: ## Chain 2: ## Chain 2: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 2: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 2: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 2: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 2: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 2: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 2: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 2: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 2: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 2: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 2: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 2: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 2: ## Chain 2: Elapsed Time: 0.025 seconds (Warm-up) ## Chain 2: 0.025 seconds (Sampling) ## Chain 2: 0.05 seconds (Total) ## Chain 2: ## ## SAMPLING FOR MODEL &#39;2354fbe97c4a0c24d3a232b7e511ee01&#39; NOW (CHAIN 3). ## Chain 3: ## Chain 3: Gradient evaluation took 0 seconds ## Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 3: Adjust your expectations accordingly! ## Chain 3: ## Chain 3: ## Chain 3: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 3: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 3: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 3: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 3: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 3: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 3: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 3: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 3: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 3: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 3: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 3: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 3: ## Chain 3: Elapsed Time: 0.022 seconds (Warm-up) ## Chain 3: 0.022 seconds (Sampling) ## Chain 3: 0.044 seconds (Total) ## Chain 3: ## ## SAMPLING FOR MODEL &#39;2354fbe97c4a0c24d3a232b7e511ee01&#39; NOW (CHAIN 4). ## Chain 4: ## Chain 4: Gradient evaluation took 0 seconds ## Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 4: Adjust your expectations accordingly! ## Chain 4: ## Chain 4: ## Chain 4: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 4: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 4: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 4: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 4: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 4: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 4: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 4: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 4: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 4: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 4: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 4: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 4: ## Chain 4: Elapsed Time: 0.02 seconds (Warm-up) ## Chain 4: 0.024 seconds (Sampling) ## Chain 4: 0.044 seconds (Total) ## Chain 4: cancer_fit1 ## Inference for Stan model: 2354fbe97c4a0c24d3a232b7e511ee01. ## 4 chains, each with iter=2000; warmup=1000; thin=1; ## post-warmup draws per chain=1000, total post-warmup draws=4000. ## ## mean se_mean sd 2.5% 25% 50% 75% 97.5% n_eff Rhat ## p[1] 0.94 0.00 0.02 0.89 0.93 0.95 0.96 0.98 3342 1 ## p[2] 0.83 0.00 0.04 0.75 0.80 0.83 0.86 0.90 2660 1 ## delta 0.11 0.00 0.05 0.03 0.08 0.11 0.14 0.21 2925 1 ## delta_up 0.99 0.00 0.07 1.00 1.00 1.00 1.00 1.00 3416 1 ## lambda 1.28 0.01 0.55 0.27 0.90 1.26 1.64 2.42 2944 1 ## lambda_up 0.99 0.00 0.07 1.00 1.00 1.00 1.00 1.00 3416 1 ## lp__ -60.38 0.02 0.98 -62.94 -60.75 -60.07 -59.68 -59.41 1782 1 ## ## Samples were drawn using NUTS(diag_e) at Mon Mar 08 14:02:52 2021. ## For each parameter, n_eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor on split chains (at ## convergence, Rhat=1). 3.2 二项Logit模型 另外一种方法，就是直接模拟比例之差，这里需要用到参数\\(\\alpha\\) 和 \\(\\beta\\)，每组数据的比例都是参数的log-odds \\[ \\begin{aligned}[t] r_i &amp;\\sim \\mathsf{Binomial}(n_i, \\pi_i) \\\\ \\pi_1 &amp;= \\frac{1}{1 + \\exp(-(\\alpha + \\beta)} \\\\ \\pi_2 &amp;= \\frac{1}{1 + \\exp(-\\alpha))} \\end{aligned} \\] 这里设定\\(\\alpha\\) 和\\(\\beta\\) 弱先验信息 \\[ \\begin{aligned} \\alpha &amp;\\sim N(0, 10)\\\\ \\beta &amp;\\sim N(0, 2.5) \\end{aligned} \\] stan_program &lt;- &quot; data { int&lt;lower = 0&gt; r[2]; int&lt;lower = 1&gt; n[2]; } parameters { real a; real b; } transformed parameters { vector&lt;lower = 0., upper = 1.&gt;[2] p; p[1] = inv_logit(a + b); p[2] = inv_logit(a); } model { a ~ normal(0, 10); b ~ normal(0, 2.5); r ~ binomial(n, p); } generated quantities { real delta; int delta_up; real lambda; int lambda_up; delta = p[1] - p[2]; delta_up = delta &gt; 0; lambda = logit(p[1]) - logit(p[2]); lambda_up = lambda &gt; 0; } &quot; cancer_data &lt;- list( r = cancer$smokers, n = cancer$n ) cancer_fit2 &lt;- stan(model_code = stan_program, data = cancer_data) ## ## SAMPLING FOR MODEL &#39;b5f2ad09693633d22f9c91277892acff&#39; NOW (CHAIN 1). ## Chain 1: ## Chain 1: Gradient evaluation took 0 seconds ## Chain 1: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 1: Adjust your expectations accordingly! ## Chain 1: ## Chain 1: ## Chain 1: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 1: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 1: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 1: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 1: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 1: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 1: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 1: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 1: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 1: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 1: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 1: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 1: ## Chain 1: Elapsed Time: 0.02 seconds (Warm-up) ## Chain 1: 0.017 seconds (Sampling) ## Chain 1: 0.037 seconds (Total) ## Chain 1: ## ## SAMPLING FOR MODEL &#39;b5f2ad09693633d22f9c91277892acff&#39; NOW (CHAIN 2). ## Chain 2: ## Chain 2: Gradient evaluation took 0 seconds ## Chain 2: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 2: Adjust your expectations accordingly! ## Chain 2: ## Chain 2: ## Chain 2: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 2: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 2: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 2: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 2: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 2: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 2: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 2: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 2: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 2: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 2: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 2: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 2: ## Chain 2: Elapsed Time: 0.02 seconds (Warm-up) ## Chain 2: 0.018 seconds (Sampling) ## Chain 2: 0.038 seconds (Total) ## Chain 2: ## ## SAMPLING FOR MODEL &#39;b5f2ad09693633d22f9c91277892acff&#39; NOW (CHAIN 3). ## Chain 3: ## Chain 3: Gradient evaluation took 0 seconds ## Chain 3: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 3: Adjust your expectations accordingly! ## Chain 3: ## Chain 3: ## Chain 3: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 3: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 3: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 3: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 3: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 3: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 3: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 3: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 3: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 3: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 3: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 3: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 3: ## Chain 3: Elapsed Time: 0.018 seconds (Warm-up) ## Chain 3: 0.018 seconds (Sampling) ## Chain 3: 0.036 seconds (Total) ## Chain 3: ## ## SAMPLING FOR MODEL &#39;b5f2ad09693633d22f9c91277892acff&#39; NOW (CHAIN 4). ## Chain 4: ## Chain 4: Gradient evaluation took 0 seconds ## Chain 4: 1000 transitions using 10 leapfrog steps per transition would take 0 seconds. ## Chain 4: Adjust your expectations accordingly! ## Chain 4: ## Chain 4: ## Chain 4: Iteration: 1 / 2000 [ 0%] (Warmup) ## Chain 4: Iteration: 200 / 2000 [ 10%] (Warmup) ## Chain 4: Iteration: 400 / 2000 [ 20%] (Warmup) ## Chain 4: Iteration: 600 / 2000 [ 30%] (Warmup) ## Chain 4: Iteration: 800 / 2000 [ 40%] (Warmup) ## Chain 4: Iteration: 1000 / 2000 [ 50%] (Warmup) ## Chain 4: Iteration: 1001 / 2000 [ 50%] (Sampling) ## Chain 4: Iteration: 1200 / 2000 [ 60%] (Sampling) ## Chain 4: Iteration: 1400 / 2000 [ 70%] (Sampling) ## Chain 4: Iteration: 1600 / 2000 [ 80%] (Sampling) ## Chain 4: Iteration: 1800 / 2000 [ 90%] (Sampling) ## Chain 4: Iteration: 2000 / 2000 [100%] (Sampling) ## Chain 4: ## Chain 4: Elapsed Time: 0.019 seconds (Warm-up) ## Chain 4: 0.018 seconds (Sampling) ## Chain 4: 0.037 seconds (Total) ## Chain 4: cancer_fit2 ## Inference for Stan model: b5f2ad09693633d22f9c91277892acff. ## 4 chains, each with iter=2000; warmup=1000; thin=1; ## post-warmup draws per chain=1000, total post-warmup draws=4000. ## ## mean se_mean sd 2.5% 25% 50% 75% 97.5% n_eff Rhat ## a 1.69 0.01 0.30 1.13 1.48 1.69 1.89 2.29 1817 1 ## b 1.38 0.01 0.57 0.33 0.98 1.34 1.75 2.53 1710 1 ## p[1] 0.95 0.00 0.02 0.90 0.94 0.95 0.97 0.98 2930 1 ## p[2] 0.84 0.00 0.04 0.76 0.82 0.84 0.87 0.91 1809 1 ## delta 0.11 0.00 0.04 0.03 0.08 0.11 0.14 0.20 1504 1 ## delta_up 1.00 0.00 0.06 1.00 1.00 1.00 1.00 1.00 3488 1 ## lambda 1.38 0.01 0.57 0.33 0.98 1.34 1.75 2.53 1710 1 ## lambda_up 1.00 0.00 0.06 1.00 1.00 1.00 1.00 1.00 3488 1 ## lp__ -55.53 0.02 0.98 -58.15 -55.94 -55.23 -54.84 -54.57 1805 1 ## ## Samples were drawn using NUTS(diag_e) at Mon Mar 08 14:03:19 2021. ## For each parameter, n_eff is a crude measure of effective sample size, ## and Rhat is the potential scale reduction factor on split chains (at ## convergence, Rhat=1). 3.3 参考 This example is derived from Simon Jackman, “Cancer: difference in two binomial proportions,” BUGS Examples, 2007-07-24, This examples comes from (JohnsonAlbert1999a?), using data from (Dorn1954a?). "]]
